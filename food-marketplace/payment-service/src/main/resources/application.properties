# Database Configuration (Own Database)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=paymentuser
quarkus.datasource.password=paymentpass123
quarkus.datasource.jdbc.url=jdbc:postgresql://payment-db:5432/paymentservice

# Hibernate Configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.sql-load-script=import.sql

# HTTP Configuration
quarkus.http.port=8085
quarkus.http.cors=true
quarkus.http.cors.origins=*

# OpenAPI Configuration
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# Application Configuration
quarkus.application.name=payment-service
quarkus.application.version=1.0.0

# Kafka Configuration (KRaft Mode)
kafka.bootstrap.servers=kafka:29092

# Event Consumers (SAGA Compensation)
mp.messaging.incoming.order-events.connector=smallrye-kafka
mp.messaging.incoming.order-events.topic=order-events
mp.messaging.incoming.order-events.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Event Producers
mp.messaging.outgoing.payment-events.connector=smallrye-kafka
mp.messaging.outgoing.payment-events.topic=payment-events
mp.messaging.outgoing.payment-events.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.payment-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Payment Gateway Configuration (Mock for local dev)
payment.gateway.mock.enabled=true
payment.gateway.razorpay.enabled=false
payment.gateway.razorpay.key=your_razorpay_key
payment.gateway.razorpay.secret=your_razorpay_secret

# Compensation Configuration
payment.compensation.retry.max-attempts=3
payment.compensation.retry.delay-seconds=5

# Logging
quarkus.log.level=INFO
quarkus.log.category."com.foodmarketplace".level=DEBUG
